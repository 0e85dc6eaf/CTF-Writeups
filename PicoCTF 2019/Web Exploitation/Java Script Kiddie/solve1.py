#!/usr/bin/env python3
from collections import deque
import sys
def toBytes(cols,key):
	ret = b""
	for i in range(len(cols)):
		cols[i].rotate(-int(key[i]))
	for i in range(len(cols[0])*16):
		ret += bytes([cols[i%16][i//16]])
	return ret
def bruteForceKey(cols):
	PNG_HEADER = b"\x89PNG\x0d\x0a\x1a\x0a\x00\x00\x00\x0dIHDR"
	END = b"??\x00\x00\x00\x00IEND\xAE\x42\x60\x82\x00\x00" # last two bytes are not part of PNG format
	key = ""
	for i in range(len(cols)):
		for j in range(10):
			cols[i].rotate(-j)
			if cols[i][0] == PNG_HEADER[i] and ((i<2) or (cols[i][-1] == END[i])):
				if len(key) == i:
					key += str(j)
				else:
					print("[*] More than one possible key")
					sys.exit(1)
			cols[i].rotate(j)
	return key
vals = open("bytes1","r").read().split()
cols = [deque() for _ in range(16)]
for i in range(len(vals)):
	cols[i%16].append(int(vals[i]))
key = bruteForceKey(cols)
print(key)
open("result1.png","wb").write(toBytes(cols,key))