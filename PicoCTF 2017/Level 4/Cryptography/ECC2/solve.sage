upper_boundary = 400000000000000000000000000000
F = GF(93556643250795678718734474880013829509320385402690660619699653921022012489089)
A = 66001598144012865876674115570268990806314506711104521036747533612798434904785
B = 25255205054024371783896605039267101837972419055969636393425590261926131199030
E = EllipticCurve(F,[0,0,0,A,B])
P = E((56027910981442853390816693056740903416379421186644480759538594137486160388926,65533262933617146434438829354623658858649726233622196512439589744498050226926))
Pn = E((61124499720410964164289905006830679547191538609778446060514645905829507254103,2595146854028317060979753545310334521407008629091560515441729386088057610440))
order = E.order()
subresults = []
factors = []
module = 1
for prime, exponent in factor(order):
	if prime > 10**9:	
		break
	_factor = prime ** exponent
	factors.append(_factor)
	P2 = P*(order//_factor)
	Pn2 = Pn*(order//_factor)
	subresults.append(discrete_log_lambda(Pn2, P2, (0,_factor), '+'))
	module *= _factor
n = crt(subresults,factors)
while n<upper_boundary:
	if P*n==Pn:
		print("Win! n=%d"%n)
		break
	n+=module