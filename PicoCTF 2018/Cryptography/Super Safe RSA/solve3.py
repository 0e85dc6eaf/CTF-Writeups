#!/usr/bin/env python2
from Crypto.Util.number import long_to_bytes
from gmpy import invert

c = 1255175567548994333354127249819818045465945247845837131555195957666457804964737798922879950261797144969862733084307639446180846553263783795441744889429182840206420204888831259981242375650511761656242096228176660519527148720935470221094990528954841844624108863140012471420257657627966512498393050231138424
n = 7532546825469911426410940113136768458077043315095155542911524574154014678970990486986256063516721130248153652003084594844427600056753818704080584487839047808180113828916708448638724664932392102253666125483234589225728745107162206409228058657219566836831623197273327386034644808286468395583678156772542957
e = 65537
#https://www.alpertron.com.ar/ECM.HTM
n_factors = [2153081851 , 2186451863 , 2265021949 , 2322070169 , 2332376621 , 2434992661 , 2444317979 , 2691287359 , 2777214371 , 2877545873 , 2891976239 , 2904397883 , 2911171183 , 3090120281 , 3107786287 , 3124844431 , 3137125529 , 3304293463 , 3348469027 , 3386518897 , 3520184557 , 3617768633 , 3753174077 , 3798022981 , 3839071447 , 3856091389 , 3927972883 , 3948854177 , 4038797039 , 4095712739 , 4119921191 , 4158321043]

totient = 1
for factor in n_factors:
	totient *= (factor-1)
d = invert(e,totient)
print(long_to_bytes(pow(c,d,n)))