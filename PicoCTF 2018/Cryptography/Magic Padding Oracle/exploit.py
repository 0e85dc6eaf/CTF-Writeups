#!/usr/bin/env python2
from pwn import *
from paddingoracle import BadPaddingException, PaddingOracle
context.log_level = "error"
class PadBuster(PaddingOracle):
	def __init__(self, **kwargs):
		super(PadBuster, self).__init__(**kwargs)
	def oracle(self, data, **kwargs):
		cookie = ''.join('{:02x}'.format(x) for x in data)
		print(cookie)
		while True:
			try:
				r = remote("2018shell.picoctf.com",27533)
				for _ in range(5):
					r.recvline()
				r.sendline(cookie)
				msg = r.recvline()
				r.close()
			except e:
				continue
			if "invalid padding" in msg:
				raise BadPaddingException
			break
"""
f0153fb8f2717a19e971b2c4efe7d569
1cf35a89de214009c362d5d88ef26ed1 {"expires":"2039
c4acfa36a20aed1d6c834235f90bf502 -10-10","is_admi
cc4b09ace2127781732e1fd2fbe55a85 n":"true","usern
00000000000000000000000000000000 ame":""}
"""
padbuster = PadBuster()
encrypted = padbuster.encrypt('{"expires":"2039-10-10","is_admin":"true","username":""}',block_size=16,iv=bytearray(16))
new_cookie = ''.join('{:02x}'.format(x) for x in encrypted)
#new_cookie = "f0153fb8f2717a19e971b2c4efe7d5691cf35a89de214009c362d5d88ef26ed1c4acfa36a20aed1d6c834235f90bf502cc4b09ace2127781732e1fd2fbe55a8500000000000000000000000000000000"
print(new_cookie)
r = remote("2018shell.picoctf.com",27533)
r.sendline(new_cookie)
r.interactive()